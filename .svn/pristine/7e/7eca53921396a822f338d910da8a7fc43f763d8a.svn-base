package com.talenton.organ.ui.user;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.text.InputType;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.MenuItem;
import android.view.View;
import android.view.inputmethod.EditorInfo;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import com.talenton.organ.BaseCompatActivity;
import com.talenton.organ.R;
import com.talenton.base.server.XLTError;
import com.talenton.base.server.XLTResponseCallback;
import com.talenton.base.util.XLTToast;
import com.talenton.base.server.UserServer;
import com.talenton.base.server.bean.RspLogin;
import com.talenton.organ.util.AppManager;

/**
 * A login screen that offers login via phone/password.
 */
public class LoginActivity extends BaseCompatActivity implements View.OnClickListener{

    private static final int REQUEST_REGISTER = 302;
    private static final int REQUEST_MODIFY_PASSWORD = 303;

    // UI references.
    private EditText mPhone;
    private EditText mPassword;
    private ImageView mEye;
    private boolean isOpenEye = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        // Set up the login form.
        mPhone = (EditText) findViewById(R.id.et_phone);
        mEye = (ImageView)findViewById(R.id.iv_eye);
        mPassword = (EditText) findViewById(R.id.et_password);

        mPassword.setOnEditorActionListener(new TextView.OnEditorActionListener() {
            @Override
            public boolean onEditorAction(TextView textView, int id, KeyEvent keyEvent) {
                if (id == R.id.login || id == EditorInfo.IME_NULL) {
                    attemptLogin();
                    return true;
                }
                return false;
            }
        });

        findViewById(R.id.layout_login).setOnClickListener(this);
        findViewById(R.id.tv_forget_password).setOnClickListener(this);
        findViewById(R.id.layout_eye).setOnClickListener(this);

    }

    @Override
    public void onDestroy() {
        // TODO Auto-generated method stub
        super.onDestroy();
    }


    /**
     * Attempts to sign in or register the account specified by the login form.
     * If there are form errors (invalid phone, missing fields, etc.), the
     * errors are presented and no actual login attempt is made.
     */
    private void attemptLogin() {


        // Reset errors.
        //mPhone.setError(null);

        // Store values at the time of the login attempt.
        String phone = mPhone.getText().toString();
        String password = mPassword.getText().toString();

        // Check for a valid phone.
        if (TextUtils.isEmpty(phone)) {
            //mPhone.setError(getString(R.string.login_error_empty_phone));
            XLTToast.makeText(this, R.string.login_error_empty_phone).show();
            mPhone.requestFocus();
            return;
        }
        /*
        else if (phone.length() != 11){
            XLTToast.makeText(this, R.string.login_error_invalid_phone).show();
            mPhone.requestFocus();
            return;
        }
        */
        // Check for a valid password, if the user entered one.
        if (TextUtils.isEmpty(password)) {
            XLTToast.makeText(this, R.string.login_error_empty_password).show();
            mPassword.requestFocus();
            return;
        }else if (password.length() < 6 || password.length() > 16){
            XLTToast.makeText(this, R.string.login_error_invalid_password).show();
            mPassword.requestFocus();
            return;
        }
        hideSoftInput(mPhone);
        showProgress(R.string.login_logining);
        UserServer.logIn(phone, password, new XLTResponseCallback<RspLogin>() {

            @Override
            public void onResponse(RspLogin data, XLTError error) {
                hideProgress();
                if (error == null) {
                    Intent intent = new Intent();
                    setResult(RESULT_OK, intent);
                    finish();
                } else {
                    if(!TextUtils.isEmpty(error.getMesssage())){
                        XLTToast.makeText(LoginActivity.this, error.getMesssage()).show();
                    }
                    // finish();登陆失败不关，等用户选择
                }

            }
        });
    }

    @Override
    public void onClick(View v) {

        switch (v.getId()){
            case R.id.layout_login:
                hideSoftInput(v);
                attemptLogin();
                break;
            case R.id.tv_forget_password:
                hideSoftInput(v);
                Intent intent3 = new Intent(this, ModifyPasswordActivity.class);
                intent3.putExtra("type", ModifyPasswordActivity.TYPE_FORGET_PASSWORD);
                startActivityForResult(intent3, REQUEST_MODIFY_PASSWORD);
                break;
            case R.id.layout_eye:
                isOpenEye = !isOpenEye;
                if(isOpenEye){
                    mEye.setImageResource(R.mipmap.eye_open);
                    mPassword.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_NORMAL);
                    mPassword.setSelection(mPassword.getText().length());
                }else{
                    mEye.setImageResource(R.mipmap.eye_close);
                    mPassword.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);
                    mPassword.setSelection(mPassword.getText().length());
                }

                break;
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data){
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode){
            case REQUEST_REGISTER:
            case REQUEST_MODIFY_PASSWORD:
                if (resultCode == Activity.RESULT_OK){
                    Intent intent = new Intent();
                    intent.putExtra("relogin", LoginMainActivity.REQUEST_RELOGIN);
                    setResult(RESULT_OK, intent);
                    finish();
                }
                break;
        }
    }

    @Override
    protected int getTitleResourceId() {
        return R.string.login_phone;
    }

    //设置导航栏右边 可点击图标和文字
    @Override
    protected int getMenuResourceId() {
        return R.menu.menu_user_login;
    }

    @Override
    protected void onRightClick(MenuItem item){
        switch (item.getItemId()){
            case R.id.menu_login_register:
                Intent intent = new Intent(this, RegisterActivity.class);
                startActivityForResult(intent, REQUEST_REGISTER);
                break;
        }
    }
}

