package com.talenton.base.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.talenton.base.dao.model.PlazaFeedsBean;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table PLAZA_FEEDS_BEAN.
*/
public class PlazaFeedsBeanDao extends AbstractDao<PlazaFeedsBean, String> {

    public static final String TABLENAME = "PLAZA_FEEDS_BEAN";

    /**
     * Properties of entity PlazaFeedsBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Guid = new Property(0, String.class, "guid", true, "GUID");
        public final static Property Dtype = new Property(1, Integer.class, "dtype", false, "DTYPE");
        public final static Property BbId = new Property(2, Long.class, "bbId", false, "BB_ID");
        public final static Property ClassId = new Property(3, Long.class, "classId", false, "CLASS_ID");
        public final static Property SchoolId = new Property(4, Long.class, "schoolId", false, "SCHOOL_ID");
        public final static Property Catid = new Property(5, Long.class, "catid", false, "CATID");
        public final static Property PublishTime = new Property(6, Long.class, "publishTime", false, "PUBLISH_TIME");
        public final static Property Content = new Property(7, String.class, "content", false, "CONTENT");
    };


    public PlazaFeedsBeanDao(DaoConfig config) {
        super(config);
    }
    
    public PlazaFeedsBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'PLAZA_FEEDS_BEAN' (" + //
                "'GUID' TEXT PRIMARY KEY NOT NULL ," + // 0: guid
                "'DTYPE' INTEGER," + // 1: dtype
                "'BB_ID' INTEGER," + // 2: bbId
                "'CLASS_ID' INTEGER," + // 3: classId
                "'SCHOOL_ID' INTEGER," + // 4: schoolId
                "'CATID' INTEGER," + // 5: catid
                "'PUBLISH_TIME' INTEGER," + // 6: publishTime
                "'CONTENT' TEXT);"); // 7: content
        // Add Indexes
        db.execSQL("CREATE INDEX " + constraint + "IDX_PLAZA_FEEDS_BEAN_GUID ON PLAZA_FEEDS_BEAN" +
                " (GUID);");
        db.execSQL("CREATE INDEX " + constraint + "IDX_PLAZA_FEEDS_BEAN_DTYPE ON PLAZA_FEEDS_BEAN" +
                " (DTYPE);");
        db.execSQL("CREATE INDEX " + constraint + "IDX_PLAZA_FEEDS_BEAN_PUBLISH_TIME ON PLAZA_FEEDS_BEAN" +
                " (PUBLISH_TIME);");
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'PLAZA_FEEDS_BEAN'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, PlazaFeedsBean entity) {
        stmt.clearBindings();
 
        String guid = entity.getGuid();
        if (guid != null) {
            stmt.bindString(1, guid);
        }
 
        Integer dtype = entity.getDtype();
        if (dtype != null) {
            stmt.bindLong(2, dtype);
        }
 
        Long bbId = entity.getBbId();
        if (bbId != null) {
            stmt.bindLong(3, bbId);
        }
 
        Long classId = entity.getClassId();
        if (classId != null) {
            stmt.bindLong(4, classId);
        }
 
        Long schoolId = entity.getSchoolId();
        if (schoolId != null) {
            stmt.bindLong(5, schoolId);
        }
 
        Long catid = entity.getCatid();
        if (catid != null) {
            stmt.bindLong(6, catid);
        }
 
        Long publishTime = entity.getPublishTime();
        if (publishTime != null) {
            stmt.bindLong(7, publishTime);
        }
 
        String content = entity.getContent();
        if (content != null) {
            stmt.bindString(8, content);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public PlazaFeedsBean readEntity(Cursor cursor, int offset) {
        PlazaFeedsBean entity = new PlazaFeedsBean( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // guid
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // dtype
            cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2), // bbId
            cursor.isNull(offset + 3) ? null : cursor.getLong(offset + 3), // classId
            cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4), // schoolId
            cursor.isNull(offset + 5) ? null : cursor.getLong(offset + 5), // catid
            cursor.isNull(offset + 6) ? null : cursor.getLong(offset + 6), // publishTime
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7) // content
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, PlazaFeedsBean entity, int offset) {
        entity.setGuid(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setDtype(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setBbId(cursor.isNull(offset + 2) ? null : cursor.getLong(offset + 2));
        entity.setClassId(cursor.isNull(offset + 3) ? null : cursor.getLong(offset + 3));
        entity.setSchoolId(cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4));
        entity.setCatid(cursor.isNull(offset + 5) ? null : cursor.getLong(offset + 5));
        entity.setPublishTime(cursor.isNull(offset + 6) ? null : cursor.getLong(offset + 6));
        entity.setContent(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(PlazaFeedsBean entity, long rowId) {
        return entity.getGuid();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(PlazaFeedsBean entity) {
        if(entity != null) {
            return entity.getGuid();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
