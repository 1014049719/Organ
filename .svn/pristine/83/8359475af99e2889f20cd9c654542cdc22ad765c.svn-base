package com.talenton.organ.ui.user.adapter;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;

import com.talenton.organ.R;
import com.talenton.organ.server.bean.user.WrapperAppData;

import java.util.List;
import android.content.Context;
import android.widget.TextView;
import android.widget.CheckBox;
import android.view.LayoutInflater;

/**
 * @author zjh
 * @date 2016/7/13
 */
public class AppModelAdapter extends BaseExpandableListAdapter{
    private List<WrapperAppData> datas;
    private Context context;

    public AppModelAdapter(Context context,List<WrapperAppData> datas){
        this.context = context;
        this.datas = datas;
    }

    @Override
    public int getGroupCount() {
        return datas.size();
    }

    @Override
    public int getChildrenCount(int groupPosition) {
        return datas.get(groupPosition).getAppModule().size();
    }

    @Override
    public Object getGroup(int groupPosition) {
        return datas.get(groupPosition);
    }

    @Override
    public Object getChild(int groupPosition, int childPosition) {
        return datas.get(groupPosition).getAppModule().get(childPosition);
    }

    @Override
    public long getGroupId(int groupPosition) {
        return groupPosition;
    }

    @Override
    public long getChildId(int groupPosition, int childPosition) {
        return childPosition;
    }

    @Override
    public boolean hasStableIds() {
        return true;
    }

    @Override
    public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {
        GroupHolder groupHolder = null;
        if (convertView == null){
            groupHolder = new GroupHolder();
            convertView = LayoutInflater.from(context).inflate(R.layout.item_group_app_model,parent,false);
            groupHolder.group_divider_line =  convertView.findViewById(R.id.group_divider_line);
            groupHolder.tv_group_name = (TextView) convertView.findViewById(R.id.tv_group_name);
            convertView.setTag(groupHolder);
        }else {
            groupHolder = (GroupHolder) convertView.getTag();
        }

        groupHolder.tv_group_name.setText(datas.get(groupPosition).getName());
        return convertView;
    }

    @Override
    public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {
        ChildHolder childHolder = null;
        if (convertView == null){
            childHolder = new ChildHolder();
            convertView = LayoutInflater.from(context).inflate(R.layout.item_child_app_model, parent, false);
            childHolder.tv_child_name = (TextView) convertView.findViewById(R.id.tv_child_name);
            childHolder.tv_child_content = (TextView) convertView.findViewById(R.id.tv_child_content);
            childHolder.cb_child_select = (CheckBox) convertView.findViewById(R.id.cb_child_select);
            convertView.setTag(childHolder);
        }else {
            childHolder = (ChildHolder) convertView.getTag();
        }
        childHolder.tv_child_name.setText(datas.get(groupPosition).getAppModule().get(childPosition).f_name);
        childHolder.tv_child_content.setText(datas.get(groupPosition).getAppModule().get(childPosition).f_desc);
        if (datas.get(groupPosition).getType() == WrapperAppData.TYPE_DEFAULT){
            childHolder.cb_child_select.setChecked(true);
        }else {
            childHolder.cb_child_select.setChecked(false);
        }
        return convertView;
    }

    @Override
    public boolean isChildSelectable(int groupPosition, int childPosition) {
        return true;
    }


    class GroupHolder{
        public View group_divider_line;
        public TextView tv_group_name;
    }

    class ChildHolder{
        public TextView tv_child_name;
        public TextView tv_child_content;
        public CheckBox cb_child_select;
    }

}
