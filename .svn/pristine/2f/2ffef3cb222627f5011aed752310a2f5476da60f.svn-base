package com.talenton.organ.ui.shop;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.AdapterView;

import com.handmark.pulltorefresh.library.PullToRefreshBase;
import com.handmark.pulltorefresh.library.PullToRefreshWebView;
import com.talenton.organ.BaseCompatFragment;
import com.talenton.organ.R;
import com.talenton.organ.ui.JavaScriptLocalObj;

import java.lang.reflect.Field;

/**
 * Created by xiaoxiang on 2016/5/19.
 */
public class GoodsDetailFragment extends BaseCompatFragment implements View.OnClickListener,AdapterView.OnItemClickListener{
    private PullToRefreshWebView mPullRefreshWebView;
    private WebView webview;
    private View _view;
    String url ;

    @Override
    public void  onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        // image_detail_fragment.xml contains just an ImageView
        if(getArguments() != null){
            url = getArguments().getString("url");
        }
        if (_view == null) {
            // 创建视图
            _view = inflater.inflate(R.layout.fragment_shop_detail,
                    container, false);
            ViewGroup parent = (ViewGroup) _view.getParent();
            if (parent != null) {
                parent.removeView(_view);
            }
            initActionBar(_view);
            initView(_view);
        }
        return _view;
    }

    @Override
    public void onClick(View v) {

    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        //TODO onItem

    }

    @SuppressLint("SetJavaScriptEnabled")
    public void initView(View v){
        mPullRefreshWebView = (PullToRefreshWebView)v.findViewById(R.id.help_webview);
        mPullRefreshWebView.setMode(PullToRefreshBase.Mode.PULL_FROM_START);
        mPullRefreshWebView.setOnRefreshListener(new PullToRefreshBase.OnRefreshListener2() {

            @Override
            public void onPullDownToRefresh(PullToRefreshBase refreshView) {
                if (webview != null){
                    webview.reload();
                }
            }

            @Override
            public void onPullUpToRefresh(PullToRefreshBase refreshView) {

            }

        });
        webview = mPullRefreshWebView.getRefreshableView();
        WebSettings webSetting = webview.getSettings();
        //设置编码
        webSetting.setDefaultTextEncodingName("utf-8");
        // LOAD_DEFAULT//LOAD_NO_CACHE
        webSetting.setCacheMode(WebSettings.LOAD_NO_CACHE);
        webSetting.setPluginState(WebSettings.PluginState.ON);
        //支持js
        webSetting.setJavaScriptEnabled(true);
        // 设置可以支持缩放
        webSetting.setSupportZoom(true);
        // 设置出现缩放工具
        webSetting.setBuiltInZoomControls(true);
        webSetting.setDomStorageEnabled(true);
        //扩大比例的缩放
        //webSetting.setUseWideViewPort(true);
        //自适应屏幕
        //webSetting.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN);
        //webSetting.setLoadWithOverviewMode(true);
        webview.setScrollBarStyle(View.SCROLLBARS_INSIDE_OVERLAY);
        JavaScriptLocalObj mJSObj = new JavaScriptLocalObj(getActivity());
        webview.addJavascriptInterface(mJSObj, "client");

        webview.setWebViewClient(new WebViewClient() {

            public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {

            }

            @Override
            public boolean shouldOverrideUrlLoading(WebView view, String url) {
                // TODO Auto-generated method stub
                webview.loadUrl(url);
                return true;
            }

        });
        if(!TextUtils.isEmpty(url))
            webview.loadUrl(url);

    }
    public GoodsDetailFragment() {
    }
    public static GoodsDetailFragment newInstance(String url) {

        GoodsDetailFragment mf = new GoodsDetailFragment();
        Bundle args = new Bundle();
        args.putString("url", url);
        mf.setArguments(args);
        return mf;
    }

    @Override
    public void onResume() {
        super.onResume();
        webview.resumeTimers();
        //webview.onResume();
    }

    @Override
    public void onPause() {
        super.onPause();
        webview.pauseTimers();
        webview.onPause();
    }

    @Override
    public void onDestroy(){
        super.onDestroy();
        //webView.setVisibility(View.GONE);
        releaseAllWebViewCallback();
    }

    private void releaseAllWebViewCallback(){
        try {
            if (android.os.Build.VERSION.SDK_INT < 16){
                Field field = WebView.class.getDeclaredField("mWebViewCore");
                field = field.getType().getDeclaredField("mBrowserFrame");
                field = field.getType().getDeclaredField("sConfigCallback");
                field.setAccessible(true);
                field.set(null, null);
            }else {
                Field sConfigCallback = Class.forName("android.webkit.BrowserFrame").getDeclaredField("sConfigCallback");
                if (sConfigCallback != null) {
                    sConfigCallback.setAccessible(true);
                    sConfigCallback.set(null, null);
                }
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    }
}
