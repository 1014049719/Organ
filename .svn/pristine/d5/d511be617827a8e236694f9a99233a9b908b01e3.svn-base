package com.talenton.organ.ui.user;

import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.baidu.autoupdatesdk.AppUpdateInfo;
import com.baidu.autoupdatesdk.AppUpdateInfoForInstall;
import com.baidu.autoupdatesdk.BDAutoUpdateSDK;
import com.baidu.autoupdatesdk.CPCheckUpdateCallback;
import com.baidu.autoupdatesdk.UICheckUpdateCallback;
import com.talenton.organ.BaseCompatActivity;
import com.talenton.organ.R;

import java.util.List;

public class AboutActivity extends BaseCompatActivity implements OnClickListener{
	
	private LinearLayout layout_check_version;
	private TextView tv_version;

	public static void startAboutActivity(Context context){
		context.startActivity(new Intent(context, AboutActivity.class));
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		setContentView(R.layout.mine_about);
		super.onCreate(savedInstanceState);
		
		initViews();
	}
	
	private void initViews() {
		layout_check_version = (LinearLayout)findViewById(R.id.layout_check_version);
		tv_version = (TextView)findViewById(R.id.tv_version);

		layout_check_version.setOnClickListener(this);
		tv_version.setText(String.format("当前版本%s", getLocVersionName()));

	}
	
	/**
	 * 获取本地文件名信息
	 */
	private String getLocVersionName() {
		String verName = " ";
		PackageManager manager = this.getPackageManager();
		try {
			PackageInfo info = manager.getPackageInfo(this.getPackageName(), 0);
			verName = String.valueOf(info.versionName);
			Log.i("UploadRecv", "LocVerName = " + verName);
		} catch (NameNotFoundException e) {
			Log.e("tag", e.getMessage());
		}
		return verName;
	}

	@Override
	public void onClick(View v) {
		int id = v.getId();
		if(id == R.id.layout_check_version){
			showProgress("正在检查是否需要更新...");
			BDAutoUpdateSDK.cpUpdateCheck(this, new CPCheckUpdateCallback() {
				@Override
				public void onCheckUpdateCallback(AppUpdateInfo appUpdateInfo, AppUpdateInfoForInstall appUpdateInfoForInstall) {
					hideProgress();
					if (appUpdateInfo != null){
						showUpdateDialog();
					}else {
						showShortToast("当前已是最新版本");
					}
				}
			});
		}
	}

	private void showUpdateDialog(){
		BDAutoUpdateSDK.uiUpdateAction(this, new UICheckUpdateCallback() {
			@Override
			public void onCheckComplete() {
			}
		});
	}

	@Override
	protected int getTitleResourceId() {
		return R.string.mine_about_title;
	}
	
	@Override
	protected void onLeftClick() {
		finish();
	}
}
