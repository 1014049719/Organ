package com.talenton.organ.ui.feed;

import android.Manifest;
import android.content.Context;
import android.content.Intent;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.TextView;

import com.talenton.organ.BaseCompatActivity;
import com.talenton.organ.R;
import com.talenton.base.AppConfig;
import com.talenton.base.server.UserServer;
import com.talenton.base.server.XLTError;
import com.talenton.base.server.XLTResponseCallback;
import com.talenton.base.server.bean.BabyData;
import com.talenton.organ.server.FeedServer;
import com.talenton.organ.server.bean.feed.InviteData;
import com.tencent.connect.share.QQShare;
import com.tencent.mm.sdk.modelmsg.SendMessageToWX;
import com.tencent.mm.sdk.modelmsg.WXMediaMessage;
import com.tencent.mm.sdk.modelmsg.WXTextObject;
import com.tencent.mm.sdk.modelmsg.WXWebpageObject;
import com.tencent.mm.sdk.openapi.IWXAPI;
import com.tencent.mm.sdk.openapi.WXAPIFactory;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;

import org.json.JSONObject;

import java.util.Map;

public class InviteAttentionActivity extends BaseCompatActivity implements View.OnClickListener{
    public final static int INVITE_FRIENDS = 1; //邀请好友
    private TextView mInviteCode, mInviteCodeAgain;
    private IWXAPI api;
    private Tencent mTencent;
    private BabyData baby;
    long appboxid;

    public static void startInviteAttentionActivity(Context context, long appboxid){
        Intent intent = new Intent(context, InviteAttentionActivity.class);
        intent.putExtra("appboxid", appboxid);
        context.startActivity(intent);
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_invite_attention);

        appboxid = this.getIntent().getLongExtra("appboxid", 0L);

        mInviteCode = (TextView)findViewById(R.id.tv_invite_code);
        mInviteCodeAgain = (TextView)findViewById(R.id.tv_invite_code_again);
        mInviteCodeAgain.setOnClickListener(this);

        if (isLogin()){
            baby = UserServer.getCurrentUser().getBaobaodata();
        }

        api = WXAPIFactory.createWXAPI(this, UserServer.WX_APP_ID, true);
        // 将该app注册到微信
        api.registerApp(UserServer.WX_APP_ID);
        mTencent = Tencent.createInstance(UserServer.QQ_APP_ID, getApplicationContext());

        getInviteCode();
    }

    private void getInviteCode(){

        showProgress("正在获取邀请码", true);
        FeedServer.getInviteCode(appboxid, new XLTResponseCallback<InviteData>() {
            @Override
            public void onResponse(InviteData data, XLTError error) {
                hideProgress();
                if (error == null) {
                    mInviteCode.setText(data.invitecode);
                    mInviteCodeAgain.setVisibility(View.GONE);
                } else {
                    mInviteCode.setText(R.string.circle_get_invite_code_fail);
                    mInviteCodeAgain.setVisibility(View.VISIBLE);
                }
            }
        });
    }

    @Override
    protected int getTitleResourceId() {
        return R.string.circle_invite_attention;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.invite_by_qq:
                inviteByQQ();
                break;
            case R.id.invite_by_wechat:
                inviteByWechat();
                break;
            case R.id.invite_by_phone:
                if(!checkPermission(Manifest.permission.SEND_SMS)){
                    return;
                }
                inviteBySms();
                break;
            case R.id.tv_invite_code_again:
                getInviteCode();
                break;
        }
    }

    @Override
    public void onPermissionsResult(Map<String, Boolean> permissions){
        if (permissions == null || permissions.size() == 0){
            return;
        }
        Object object = permissions.get(Manifest.permission.SEND_SMS);
        if(object != null && object instanceof Boolean && (Boolean)object) {
            inviteBySms();
        }
    }

    private void inviteByWechat() {
        // 初始化一个WXTextObject对象
        WXTextObject textObj = new WXTextObject();

        textObj.text = getString(R.string.circle_invite_context, mInviteCode.getText(),
                getString(R.string.circle_download_lsg_url));

        WXWebpageObject localWXWebpageObject = new WXWebpageObject();
        localWXWebpageObject.webpageUrl = getString(R.string.circle_download_lsg_url);//AppConfig.HOME_URL + getString(R.string.circle_download_lsg_url);// "http://www.jyex.cn/";//
        // getString(R.string.send_request_download_url);

        // 用WXTextObject对象初始化一个WXMediaMessage对象
        WXMediaMessage msg = new WXMediaMessage();
        // msg.mediaObject = textObj;
        msg.mediaObject = localWXWebpageObject;
        // 发送文本类型的消息时，title字段不起作用
        msg.title = String.format("%s%s", getString(R.string.circle_invite_code), mInviteCode.getText().toString());
        String name = UserServer.getCurrentUser().realname == null ? "TA" : UserServer.getCurrentUser().realname;
        msg.description = getString(R.string.circle_invite_description, name);
        msg.setThumbImage(BitmapFactory.decodeResource(getResources(), R.mipmap.invite_icon));// trademark_panda_head_108
        // 构造一个Req
        SendMessageToWX.Req req = new SendMessageToWX.Req();
        req.transaction = String.valueOf(System.currentTimeMillis()); // transaction字段用于唯一标识一个请求
        req.message = msg;
        req.scene = SendMessageToWX.Req.WXSceneSession;

        // 调用api接口发送数据到微信
        api.sendReq(req);
    }

    private void inviteByQQ() {
        Bundle params = new Bundle();
        params.putInt(QQShare.SHARE_TO_QQ_KEY_TYPE, QQShare.SHARE_TO_QQ_TYPE_DEFAULT);
        params.putString(QQShare.SHARE_TO_QQ_TITLE, String.format("%s%s", getString(R.string.circle_invite_code), mInviteCode.getText().toString()));
        String name = UserServer.getCurrentUser().realname == null ? "TA" : UserServer.getCurrentUser().realname;
        params.putString(QQShare.SHARE_TO_QQ_SUMMARY, getString(R.string.circle_invite_description, name));
        params.putString(QQShare.SHARE_TO_QQ_TARGET_URL,getString(R.string.circle_download_lsg_url));
        //AppConfig.HOME_URL + getString(R.string.send_request_download_url));
        params.putString(QQShare.SHARE_TO_QQ_IMAGE_URL, AppConfig.HOME_URL + getString(R.string.circle_logo_icon));
        params.putString(QQShare.SHARE_TO_QQ_APP_NAME, getString(R.string.app_name));
        params.putInt(QQShare.SHARE_TO_QQ_EXT_INT, QQShare.SHARE_TO_QQ_FLAG_QZONE_ITEM_HIDE);
        mTencent.shareToQQ(this, params, new BaseUiListener());
    }

    /* 用手机直接发短信，在短信界面选择对方号码 */
    private void inviteBySms() {
        Intent sendIntent = new Intent(Intent.ACTION_VIEW);
        sendIntent.putExtra("sms_body", getString(R.string.circle_invite_context, mInviteCode.getText(),
                getString(R.string.circle_download_lsg_url)));//AppConfig.NoHTTP_HOME_URL + getString(R.string.send_request_download_url)));
        sendIntent.setType("vnd.android-dir/mms-sms");
        startActivity(sendIntent);
    }

    private class BaseUiListener implements IUiListener {
        public void onComplete(JSONObject response) {
            // mBaseMessageText.setText("onComplete:");
            // mMessageText.setText(response.toString());
            doComplete(response);
        }

        protected void doComplete(JSONObject values) {
        }

        @Override
        public void onError(UiError e) {
            // showResult("onError:", "code:" + e.errorCode + ", msg:"
            // + e.errorMessage + ", detail:" + e.errorDetail);
        }

        @Override
        public void onCancel() {
            // showResult("onCancel", "");
        }

        @Override
        public void onComplete(Object arg0) {
            // TODO Auto-generated method stub

        }
    }
}
