package com.talenton.organ.ui.school;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.PopupWindow;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;

import com.talenton.organ.BaseListActivity;
import com.talenton.organ.R;
import com.talenton.base.server.XLTError;
import com.talenton.organ.server.SchoolCacheServer;
import com.talenton.organ.server.SchoolServer;
import com.talenton.organ.server.bean.school.BaseRspList;
import com.talenton.organ.server.bean.school.ClassData;
import com.talenton.organ.server.bean.school.ClassFilterAge;
import com.talenton.organ.server.bean.school.ReqAdvertisement;
import com.talenton.organ.server.bean.school.ReqClassList;
import com.talenton.organ.server.bean.school.event.JoinClassEvent;
import com.talenton.organ.ui.school.adapter.ClassAdapter;
import com.talenton.organ.widget.AdvertisementView;
import com.talenton.organ.widget.dialog.FilterPopup;

import org.greenrobot.eventbus.EventBus;
import org.greenrobot.eventbus.Subscribe;
import org.greenrobot.eventbus.ThreadMode;

import java.util.ArrayList;
import java.util.List;

/**
 * @author zjh
 * @date 2016/4/1
 */
public class ClassListActivity extends BaseListActivity implements View.OnClickListener, AdapterView.OnItemClickListener, FilterPopup.OnPopupItemClickListener, PopupWindow.OnDismissListener {
    private AdvertisementView ad_view; //广告
    private List<ClassData> classDatas;
    private static final String DATA = "data";
    private static final String FILTER_DATA = "filter_data";
    private static final String TITLE = "title";
    private static final String SELECTED_POSITION = "selected_position";
    private static final String IS_SHOW_AGE_BTN = "is_show_age_btn";
    private static final String IS_SHOW_FILTER_FIELD = "is_show_filter_field";
    private ReqClassList reqClassList;
    private TextView tv_filter_age;
    private RadioGroup rg_filter;
    private RadioButton rbtn_filter_hot;
    private RadioButton rbtn_filter_last;
    private FilterPopup filterPopup;
    private View divider_line;
    private ArrayList<ClassFilterAge> filterAges;
    private int selectedAgePosition;
    private SchoolServer.SchoolClassListServer classServer;
    private boolean isFirstLoad = true; //是否为第一次加载
    private boolean isShowFilterAgeBtn; //是否显示按年龄筛选按钮
    private boolean isShowFilterField; //是否显示筛选域
    private String title;
    private int currentClickPosition = -1; //当前点击位置

    public static void startClassListActivity(Context context,String title,ReqClassList reqClassList){
        if (reqClassList == null){
            return;
        }
        Intent intent = new Intent(context,ClassListActivity.class);
        intent.putExtra(TITLE, title);
        intent.putExtra(DATA, reqClassList);
        context.startActivity(intent);
    }

    public static void startClassListActivity(Context context,String title,ReqClassList reqClassList,boolean isShowFilterAgeBtn){
        if (reqClassList == null){
            return;
        }
        Intent intent = new Intent(context,ClassListActivity.class);
        intent.putExtra(TITLE, title);
        intent.putExtra(IS_SHOW_AGE_BTN,isShowFilterAgeBtn);
        intent.putExtra(DATA, reqClassList);
        context.startActivity(intent);
    }

    public static void startClassListActivityNoFilter(Context context,String title,ReqClassList reqClassList,boolean isShowFilterField){
        if (reqClassList == null){
            return;
        }
        Intent intent = new Intent(context,ClassListActivity.class);
        intent.putExtra(TITLE, title);
        intent.putExtra(IS_SHOW_FILTER_FIELD,isShowFilterField);
        intent.putExtra(DATA, reqClassList);
        context.startActivity(intent);
    }


    public static void startClassListActivity(Context context,String title,ReqClassList reqClassList,ArrayList<ClassFilterAge> classFilterAges,int selectedAgePostion){
        if (reqClassList == null){
            return;
        }
        Intent intent = new Intent(context,ClassListActivity.class);
        intent.putExtra(TITLE, title);
        intent.putExtra(DATA, reqClassList);
        intent.putExtra(SELECTED_POSITION, selectedAgePostion);
        intent.putParcelableArrayListExtra(FILTER_DATA, classFilterAges);
        context.startActivity(intent);
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        setContentView(R.layout.activity_class_list);
        super.onCreate(savedInstanceState);
        getIntentData();
        initView();
        fillTitle();
        fillAdViewData(false);
        fillListData();
        EventBus.getDefault().register(this);
    }

    /**
     * 获取intent数据
     */
    private void getIntentData() {
        reqClassList = getIntent().getParcelableExtra(DATA);
        filterAges = getIntent().getParcelableArrayListExtra(FILTER_DATA);
        selectedAgePosition = getIntent().getIntExtra(SELECTED_POSITION, -1);
        isShowFilterAgeBtn = getIntent().getBooleanExtra(IS_SHOW_AGE_BTN,true);
        isShowFilterField = getIntent().getBooleanExtra(IS_SHOW_FILTER_FIELD,true);
        if (filterAges == null){
            filterAges = (ArrayList<ClassFilterAge>) SchoolCacheServer.getInstance().getCacheAgeList();    //从缓存里获取年龄段
            if (filterAges == null){
                filterAges = new ArrayList<>();
            }
        }
        filterAges.add(0, new ClassFilterAge("不限"));
    }

    @Override
    protected void onDestroy() {
        if (ad_view != null){
            ad_view.onDestroy();
        }
        EventBus.getDefault().unregister(this);
        super.onDestroy();
    }

    @Override
    public void onResume() {
        if (ad_view != null){
            ad_view.onResume();
        }
        super.onResume();
    }

    @Override
    public void onPause() {
        if (ad_view != null){
            ad_view.onPause();
        }
        super.onPause();
    }

    /**
     * 填充标题
     */
    private void fillTitle() {
        title = getIntent().getStringExtra("title");
        if(title != null){
            mActionBarTitle.setText(title);
        }
    }

    /**
     * 填充数据
     */
    private void fillListData() {
        classDatas = new ArrayList<>();
        classServer = new SchoolServer.SchoolClassListServer(reqClassList);
        getListData(false);
        mAdapter = new ClassAdapter(this,classDatas);
        mPullRefreshListView.getRefreshableView().setAdapter(mAdapter);
        mPullRefreshListView.setOnItemClickListener(this);

        if (selectedAgePosition != -1){
            if (selectedAgePosition + 1 < filterAges.size()){
                tv_filter_age.setText(filterAges.get(selectedAgePosition + 1).getTitle());
            }
        }
    }

    private void getListData(final boolean cleanData) {
        startGetData(classServer, new ListResponseCallback() {
            @Override
            public void onSuccess(BaseRspList data) {
                if (cleanData) {
                    mAdapter.clear();
                }
                classDatas.addAll(data.getList());
                mAdapter.notifyDataSetChanged();
                isFirstLoad = false;
            }

            @Override
            public void onError(XLTError error) {

            }
        });
    }

    /**
     * 填充广告view数据
     */
    private void fillAdViewData(boolean isRefresh) {
//        if (reqClassList != null && reqClassList.isAllClassType()){
//            ad_view.setData(new ReqAdvertisement(ReqAdvertisement.AD_SCHOOL_ALL));
//        }else {
//            ad_view.setData(new ReqAdvertisement(ReqAdvertisement.AD_SCHOOL_CLASS_LIST));
//        }
        ad_view.setData(new ReqAdvertisement(ReqAdvertisement.AD_SCHOOL_CLASS_LIST));
        ad_view.setIsRefresh(isRefresh);
    }

    private void initView() {
        View headerView = LayoutInflater.from(this).inflate(R.layout.item_header_school_class,null);
        ad_view = (AdvertisementView) headerView.findViewById(R.id.ad_view);
        tv_filter_age = (TextView) headerView.findViewById(R.id.tv_filter_age);
        tv_filter_age.setOnClickListener(this);
        rg_filter = (RadioGroup) headerView.findViewById(R.id.rg_filter);
        rg_filter.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, int checkedId) {
                if (isFirstLoad){
                    return;
                }
                if (checkedId == R.id.rbtn_filter_hot){
                    //热门
                    if (reqClassList.getOrdertype() == ReqClassList.BASIS_HOT){
                        return;
                    }
                    reqClassList.setOrdertype(ReqClassList.BASIS_HOT);
                }else if (checkedId == R.id.rbtn_filter_last){
                    //最新
                    if (reqClassList.getOrdertype() == ReqClassList.BASIS_LAST){
                        return;
                    }
                    reqClassList.setOrdertype(ReqClassList.BASIS_LAST);
                }
                mPullRefreshListView.setRefreshing(true);
//                getListData(true);
            }
        });
        rbtn_filter_hot = (RadioButton) headerView.findViewById(R.id.rbtn_filter_hot);
        rbtn_filter_last = (RadioButton) headerView.findViewById(R.id.rbtn_filter_last);
        rbtn_filter_hot.setChecked(true);
        divider_line = headerView.findViewById(R.id.divider_line);
        if (isShowFilterField){
            mPullRefreshListView.getRefreshableView().addHeaderView(headerView);
        }
        if (!isShowFilterAgeBtn){
            tv_filter_age.setVisibility(View.GONE);
        }
    }

    @Override
    protected int getPullRefreshListViewResId() {
        return R.id.list;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.tv_filter_age:
                if (filterPopup == null){
                    filterPopup = new FilterPopup(this,filterAges,selectedAgePosition + 1);
                    filterPopup.setOnPopupItemClickListener(this);
                    filterPopup.setOnDismissListener(this);
                }
                if (tv_filter_age.isSelected()){
                    tv_filter_age.setSelected(false);
                    filterPopup.dismiss();
                }else {
                    tv_filter_age.setSelected(true);
                    filterPopup.showAsDropDown(divider_line);
                }
                break;
        }
    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        position = position - mPullRefreshListView.getRefreshableView().getHeaderViewsCount();
        if (position >= 0){  //monkey测试时出现position为-1
            currentClickPosition = position;
            ClassData classData = (ClassData) mAdapter.getItem(position);
            long aid = classData.getAid();
            ClassDetailActivity.startClassDetailActivity(this,aid,position);
        }
    }

    @Override
    protected void onRightClick(MenuItem item) {
        switch (item.getItemId()){
            case R.id.search:
                SearchActivity.startSearchActivity(this,reqClassList);
                break;
        }
    }


    @Override
    protected int getMenuResourceId() {
        return R.menu.school_class_search;
    }

    @Override
    public void popupItemClickListener(View parent, View v, int position) {
        ClassFilterAge classFilterAge = filterAges.get(position);
        if (position == 0){
            reqClassList.setAge(-1);
            tv_filter_age.setText(getString(R.string.school_class_filter_text_age));
            if (selectedAgePosition == -1){
                setTitle(title);
            }else {
                setTitle(getString(R.string.school_class_filter_text_age));
            }
        }else {
            reqClassList.setAge((int) classFilterAge.getAgeid());
            tv_filter_age.setText(classFilterAge.getTitle());
            setTitle(classFilterAge.getTitle());
        }
        mPullRefreshListView.setRefreshing(true);
//        getListData(true);
    }

    @Override
    public void onDismiss() {
        tv_filter_age.setSelected(false);
    }

    @Override
    protected void onRefresh(BaseRspList data, XLTError error) {
        fillAdViewData(true); //更新广告
    }

    @Subscribe(threadMode = ThreadMode.MAIN)
    public void onEventMainThread(JoinClassEvent joinClassEvent) {
        if (joinClassEvent == null){
            return;
        }
        int position = joinClassEvent.getPosition();
        if (position != -1 && position == currentClickPosition){
            int currentJoincount = ((ClassAdapter)mAdapter).getDatas().get(position).getJoincount();
            ((ClassAdapter)mAdapter).getDatas().get(position).setJoincount(currentJoincount + 1);
            mAdapter.notifyDataSetChanged();
        }
    }


}