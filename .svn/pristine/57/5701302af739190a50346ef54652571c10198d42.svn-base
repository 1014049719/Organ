package com.talenton.organ.ui.user;

import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.util.TypedValue;
import android.view.View;
import android.widget.AdapterView;

import com.baoyz.swipemenulistview.SwipeMenu;
import com.baoyz.swipemenulistview.SwipeMenuCreator;
import com.baoyz.swipemenulistview.SwipeMenuItem;
import com.baoyz.swipemenulistview.SwipeMenuListView;
import com.handmark.pulltorefresh.library.PullToRefreshSlideListView;
import com.talenton.base.server.XLTError;
import com.talenton.base.server.XLTResponseCallback;
import com.talenton.base.server.bean.AppData;
import com.talenton.organ.BaseEmptyActivity;
import com.talenton.organ.R;
import com.talenton.organ.server.MineServer;
import com.talenton.organ.server.bean.user.RspMyFollowAppListData;
import com.talenton.organ.ui.user.adapter.MyFollowAppManagerAdapter;

import java.util.ArrayList;
import android.content.Context;
import android.content.Intent;


public class MyFollowAppManagerActivity extends BaseEmptyActivity implements AdapterView.OnItemClickListener, SwipeMenuListView.OnMenuItemClickListener {
    private MyFollowAppManagerAdapter adapter;

    public static void startMyFollowAppManagerActivity(Context context){
        context.startActivity(new Intent(context,MyFollowAppManagerActivity.class));
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_my_follow_app_manager);

        initView();
        getData();
    }

    private void initView() {
        PullToRefreshSlideListView pullToRefreshSlideListView = (PullToRefreshSlideListView) findViewById(R.id.list);
        SwipeMenuCreator creator = new SwipeMenuCreator() {

            @Override
            public void create(SwipeMenu menu) {
                // create "open" item
                SwipeMenuItem openItem = new SwipeMenuItem(MyFollowAppManagerActivity.this);
                // set item background
                openItem.setBackground(new ColorDrawable(getResources().getColor(R.color.bg_give_up)));
                // set item width
                openItem.setWidth((int) TypedValue.applyDimension(
                        TypedValue.COMPLEX_UNIT_DIP, 70, getResources().getDisplayMetrics()));
                // set item title
                openItem.setTitle(getString(R.string.school_text_give_up));
                // set item title fontsize
                openItem.setTitleSize(16);
                // set item title font color
                openItem.setTitleColor(Color.WHITE);
                // add to menu
                menu.addMenuItem(openItem);
            }
        };

        // set creator
        pullToRefreshSlideListView.getRefreshableView().setMenuCreator(creator);
        pullToRefreshSlideListView.getRefreshableView().setSwipeDirection(SwipeMenuListView.DIRECTION_LEFT);
        pullToRefreshSlideListView.getRefreshableView().setOnItemClickListener(this);
        pullToRefreshSlideListView.getRefreshableView().setOnMenuItemClickListener(this);
        adapter = new MyFollowAppManagerAdapter(this,new ArrayList<AppData>());
        pullToRefreshSlideListView.setAdapter(adapter);
        addEmptyViewToContain(pullToRefreshSlideListView);
    }

    private void getData() {
        showLoadingView();
        MineServer.getMyFollowAppList(new XLTResponseCallback<RspMyFollowAppListData>() {
            @Override
            public void onResponse(RspMyFollowAppListData data, XLTError error) {
                if (error == null && data != null){
                    adapter.addAll(data.applist);
                    adapter.notifyDataSetChanged();
                    showData();
                }else {
                    showLoadErrorView();
                }
            }
        });
    }

    @Override
    public void onReload(View v) {
        getData();
    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        //TODO 切换专属应用
        showShortToast("position==>"+position);
    }

    @Override
    public boolean onMenuItemClick(int position, SwipeMenu menu, int index) {
        if (index == 0){
            adapter.remove(position);
            adapter.notifyDataSetChanged();
        }
        return false;
    }
}
