package com.talenton.organ.widget;

import android.app.Activity;
import android.app.Dialog;
import android.content.DialogInterface;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.app.DialogFragment;
import android.support.v7.app.AppCompatActivity;
import android.text.TextUtils;
import android.view.KeyEvent;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;

import com.nostra13.universalimageloader.core.ImageLoader;
import com.talenton.organ.R;
import com.talenton.base.server.XLTError;
import com.talenton.base.server.XLTResponseCallback;
import com.talenton.base.server.bean.FirstIssueData;
import com.talenton.base.util.ImageLoaderManager;
import com.talenton.base.util.SystemUtil;
import com.talenton.organ.server.OperationProjectServer;
import com.talenton.base.server.UserServer;
import com.talenton.organ.server.bean.message.CustomMessageData;
import com.talenton.organ.server.bean.operation.HomeAdvertisement;
import com.talenton.organ.server.bean.operation.RspHomeAdvertisement;
import com.talenton.organ.util.CacheManager;
import com.talenton.organ.util.UIHelper;

import java.util.LinkedList;

/**
 * Created by ttt on 2016/4/5.
 */
public class HomeAdvertisementDialog extends DialogFragment implements View.OnClickListener {

    public final static int HOME_AD_INDEX = 1;

    private ImageView mAdvertisement;
    private TextView mTimer;
    private ImageView mAdvertisementLogo;
    private Handler mHandler = new Handler();
    private int mSecond = 0;
    boolean isShowTimer = false;

    public static HomeAdvertisementDialog newInstance(){
        HomeAdvertisementDialog fragment = new HomeAdvertisementDialog();
        return fragment;
    }

    @Override
    public void onAttach(Activity activity) {
        super.onAttach(activity);
    }

    @Override
    public void onResume() {
        super.onResume();
		/*
		if(isAutoDissmiss){
			DialogDismiss(false);
		}
		*/
        //else if(isPostRunnable)
        //	mHandler.postDelayed(mRunnable, 1000);
    }

    @Override
    public void onPause() {
        super.onPause();
        //if(isPostRunnable)
        //	mHandler.removeCallbacks(mRunnable);
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        if(mHandler != null){
            mHandler.removeCallbacks(mRunnable);
        }
    }

    @Override
    public void onStop() {
        super.onStop();
    }

    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {
        final Dialog dialog = new Dialog(getActivity(), R.style.common_dialog);
        dialog.setContentView(R.layout.dialog_home_advertisement);
        dialog.setCancelable(false);
        dialog.setCanceledOnTouchOutside(false);
        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.WHITE));
        dialog.setOnKeyListener(new DialogInterface.OnKeyListener() {
            @Override
            public boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {
                // TODO Auto-generated method stub
                if (keyCode == KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0) {
                    return true;
                }
                return false;
            }
        });

        mAdvertisement = (ImageView)dialog.findViewById(R.id.iv_advertisement);
        mTimer = (TextView)dialog.findViewById(R.id.tv_Advertisement_timer);
        mAdvertisementLogo = (ImageView)dialog.findViewById(R.id.iv_advertisement_logo);
        //mAdvertisementLogo.setOnClickListener(this);
        FirstIssueData firstData = SystemUtil.getFirstIssueData();
        if(firstData != null && firstData.resId > 0){
            mAdvertisementLogo.setVisibility(View.VISIBLE);
            mAdvertisementLogo.setImageResource(firstData.resId);
        }else{
            mAdvertisementLogo.setVisibility(View.GONE);
        }
        mTimer.setVisibility(View.GONE);
        mAdvertisement.setOnClickListener(this);

        LinkedList<HomeAdvertisement> ha = CacheManager.getInstance().getHomeAdvertisement();
        if(ha == null || ha.size() == 0 || ha.get(0) == null || ha.get(0).id == 0){
            DialogDismiss(false);
        }else{
            initDatas(ha);
        }

        return dialog;
    }

    private void initDatas(LinkedList<HomeAdvertisement> ha) {
        // TODO Auto-generated method stub
        HomeAdvertisement advertisement = ha.get(0);
        if(!TextUtils.isEmpty(advertisement.advPic))
            ImageLoader.getInstance().displayImage(advertisement.advPic, mAdvertisement,
                    ImageLoaderManager.DEFAULT_DISPLAYER);
        mSecond = advertisement.showTime;
        isShowTimer = mSecond > 0;
        mTimer.setVisibility(isShowTimer ? View.VISIBLE : View.GONE);
        mTimer.setText(""+mSecond);
        if(mHandler != null){
            mHandler.postDelayed(mRunnable, 1000);
        }
    }

    @Override
    public void onClick(View v) {
        // TODO Auto-generated method stub
        int id = v.getId();
        if(id == R.id.iv_advertisement){
            DialogDismiss(true);
        }
    }

    Runnable mRunnable = new Runnable(){

        @Override
        public void run() {
            // TODO Auto-generated method stub
            mSecond--;
            if(mSecond <= 0 || mHandler == null){
                mTimer.setText("");
                DialogDismiss(false);
                return;
            }
            mTimer.setText(""+mSecond);
            mHandler.postDelayed(mRunnable, 1000);
        }
    };


    private void DialogDismiss(boolean click){
        if (getDialog() != null) {
            try {
                LinkedList<HomeAdvertisement> ha = CacheManager.getInstance().getHomeAdvertisement();
                if (click && ha != null && ha.size() > 0){
                    HomeAdvertisement advertisement = ha.get(0);
                    if(advertisement != null && advertisement.id > 0) {
                        CustomMessageData customMessageData = new CustomMessageData();
                        customMessageData.op = advertisement.oMode;
                        customMessageData.url = advertisement.advUrl;
                        customMessageData.opAction(getContext());
                    }
                }
                dismissAllowingStateLoss();
            } catch (IllegalArgumentException e) {
                e.printStackTrace();
            }
        }
    }

    public static void getHomeAdvertisement(int appType){

        LinkedList<HomeAdvertisement> ha = CacheManager.getInstance().getHomeAdvertisement();
        if(ha != null && ha.size() > 0) return;

        OperationProjectServer.getHomeAdvertisement(appType, new XLTResponseCallback<RspHomeAdvertisement>() {
            @Override
            public void onResponse(RspHomeAdvertisement data, XLTError error) {
                // TODO Auto-generated method stub
                if (error == null && data != null && data.list != null) {
                    if (data.list != null && data.list.size() > 0 && data.list.get(0) != null) {
                        preLoadImage(data.list.get(0).advPic);
                        CacheManager.getInstance().setHomeAdvertisement(data.list);
                    }
                }
            }
        });
    }

    public static void preLoadImage(String url){
        if(TextUtils.isEmpty(url)) return;
        ImageLoader.getInstance().loadImageSync(url);
    }
}
