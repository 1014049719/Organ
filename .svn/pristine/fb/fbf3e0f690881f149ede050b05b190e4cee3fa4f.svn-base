package com.talenton.organ.ui.user;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.LinearLayout;

import com.talenton.organ.BaseWebViewActivity;
import com.talenton.organ.R;
import com.talenton.base.AppConfig;
import com.talenton.base.util.XLTToast;
import com.talenton.base.widget.LoadingViewHolder;
import com.talenton.organ.server.bean.feed.PostToParam;
import com.talenton.organ.server.bean.user.GenerateEBookData;
import com.talenton.organ.ui.feed.SocialActivity;
import com.talenton.organ.ui.feed.image.AllPicBrowserActivity;

import java.io.Serializable;

public class PreviewEBookWebActivity extends BaseWebViewActivity implements View.OnClickListener {

    private LinearLayout mLayoutNoPicture;
    private Button mOk;
    private GenerateEBookData mGebookData = null;
    private View mWebLoading;
    //private LoadingViewHolder mLoading;
    private static final String URL = "h5.php?mod=show_ebook&cmdcode=134&circle_id=%d";

    public static void startPreviewEBookWebActivity(Context context, GenerateEBookData ebookData) {
        if (ebookData == null)
            return;
        Intent intent = new Intent(context, PreviewEBookWebActivity.class);
        intent.putExtra("ebook", ebookData);
        intent.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
        context.startActivity(intent);
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_preview_ebook_web);

        initViews();
        initDatas();
    }

    private void initViews() {
        // TODO Auto-generated method stub
        mWebLoading = findViewById(R.id.wb_loading);
        mLayoutNoPicture = (LinearLayout) findViewById(R.id.layout_no_picture);
        mOk = (Button) findViewById(R.id.bt_ok);
        mOk.setOnClickListener(this);

        View loadingView = findViewById(R.id.loading_container);
        loadingView.setVisibility(View.GONE);
        //mLoading = new LoadingViewHolder(pullToRefreshWebView, loadingView, this, this);
    }

    private void initDatas() {

        // webview.loadUrl(url);
        Intent intent = this.getIntent();
        Serializable obj = intent.getSerializableExtra("ebook");
        if (obj != null && obj instanceof GenerateEBookData) {
            mGebookData = (GenerateEBookData) obj;
            loadData();
        } else {
            initDatas(0);
        }
    }

    private void initDatas(int id) {
        // TODO Auto-generated method stub
        /*
        mLoading.showView(LoadingViewHolder.VIEW_TYPE_LOADING);
        ReqGenerateEBook info = new ReqGenerateEBook();
        info.baobaouid = baobaouid;
        info.dtype = dtype;
        MineServer.getGenerateEBook(info, new XLTResponseCallback<RspGenerateEBook>() {
            @Override
            public void onResponse(RspGenerateEBook data, XLTError error) {
                // TODO Auto-generated method stub
                if (data != null && error == null) {
                    if(data.havdynamic == 1 && data.urlarr != null && !data.urlarr.isEmpty())
                        mGebookData = data.urlarr.get(0);
                    loadData();
                } else if (error != null) {
                    mLoading.showView(LoadingViewHolder.VIEW_TYPE_NO_NOTWORK);
                } else {
                    mLoading.showView(LoadingViewHolder.VIEW_TYPE_NO_DATA);
                }
            }
        });
        */
    }

    private void loadData() {
        //mLoading.showView(LoadingViewHolder.VIEW_TYPE_DATA);

        if (mGebookData == null || mGebookData.topicscount <= 0) {
            mLayoutNoPicture.setVisibility(View.VISIBLE);
            mOk.setVisibility(View.VISIBLE);
            pullToRefreshWebView.setVisibility(View.GONE);
            mWebLoading.setVisibility(View.GONE);
        } else {
            mWebLoading.setVisibility(View.VISIBLE);
            mLayoutNoPicture.setVisibility(View.GONE);
            mOk.setVisibility(View.GONE);
            pullToRefreshWebView.setVisibility(View.VISIBLE);
            String url = AppConfig.HOME_URL + String.format(URL, mGebookData.circleId);
            synCookies(this, url);
            webView.loadUrl(url);
        }

    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.btn_reload:
            case R.id.empty_action:
                initDatas(0);
                break;
            case R.id.bt_ok:
                if (mGebookData != null) {
                    PostToParam param = new PostToParam();
                    param.circleId = mGebookData.circleId;
                    param.circleType = mGebookData.circleType;
                    param.name = mGebookData.circleName;
                    param.mediaType = PostToParam.POST_GALLERY;
                    AllPicBrowserActivity.startImportGallery(this, param);
                    finish();
                }
                break;
        }
    }

    @Override
    protected int getMenuResourceId() {
        return R.menu.menu_book_share;
    }

    @Override
    protected void onRightClick(MenuItem item){
        if (mGebookData == null || mGebookData.topicscount <= 0){
            XLTToast.makeText(this, "没有上传照片，不能分享").show();
            return;
        }
        if (mGebookData.circleId == 0){
            XLTToast.makeText(this, "数据错误");
            return;
        }
        String url = String.format("h5.php?mod=show_ebook&cmdcode=134&circle_id=%d&sign=1", mGebookData.circleId);

        SocialActivity.startSocialActivity(this, mGebookData.sharetitle, mGebookData.sharecontent,url, -1);
    }
}
